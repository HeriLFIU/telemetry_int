<template>
    <k-toolbar-item icon="chart-line" tooltip="Telemetry INT">
        <k-accordion>
            <k-accordion-item title="List EVCs">
                <k-button icon="plug" title="List Installed EVCs" @click="get_EVCs">
                </k-button>
            </k-accordion-item>
        </k-accordion>
    </k-toolbar-item>
</template>
<script>
module.exports = {
    data: function() {
        return {
            telemetryINT_Data: {},
        }
    },
    methods: {
        get_EVCs() {
            var self = this
            let request = $.ajax({
                            type:"GET",
                            dataType: "json",
                            url: this.$kytos_server_api + "kytos/mef_eline/v2/evc/",
                            async: true});
            request.done(function(data) {
                self.extract_TelemetryINTData(data)
                self.display_InfoPanel()
            });
            request.fail(function(data) {
                let notification = {
                    icon: 'cog',
                    title: 'Could not retrieve EVCs',
                    description: data.status.toString()
                }
                self.$kytos.eventBus.$emit("setNotification", notification)
            });
        },
        extract_TelemetryINTData(EVC_Data) {
            for (let EVC in EVC_Data) {
                this.telemetryINT_Data[EVC] = {}
                this.telemetryINT_Data[EVC]["active"] = EVC_Data[EVC].active
                this.telemetryINT_Data[EVC]["id"] = EVC_Data[EVC].id
                this.telemetryINT_Data[EVC]["name"] = EVC_Data[EVC].name
                if (EVC_Data[EVC].metadata?.telemetry) {
                    this.telemetryINT_Data[EVC]["enabled"] = EVC_Data[EVC].metadata.telemetry.enabled
                    this.telemetryINT_Data[EVC]["status"] = EVC_Data[EVC].metadata.telemetry.status
                    this.telemetryINT_Data[EVC]["status_reason"] = this.splitStatusReasons(EVC_Data[EVC].metadata.telemetry.status_reason)
                    this.telemetryINT_Data[EVC]["status_updated_at"] = EVC_Data[EVC].metadata.telemetry.status_updated_at
                } else {
                    this.telemetryINT_Data[EVC]["enabled"] = "N/A"
                    this.telemetryINT_Data[EVC]["status"] = "N/A"
                    this.telemetryINT_Data[EVC]["status_reason"] = "N/A"
                    this.telemetryINT_Data[EVC]["status_updated_at"] = "N/A"
                }

            }
        },
        display_InfoPanel() {
            var content = {
                          "component": 'kytos-telemetry_int-k-info-panel-show_telemetry_int_data',
                          "content": this.telemetryINT_Data,
                          "icon": "info-circle",
                          "title": "View Telemetry INT Data",
                          "subtitle": "by kytos/telemetry_int"
                          }
            this.$kytos.eventBus.$emit("showInfoPanel", content)
        },
        //Formats status reason data for table
        splitStatusReasons(statusReasons) {
            return statusReasons.toString()
        }
    },
    computed: {

    }
}
</script>